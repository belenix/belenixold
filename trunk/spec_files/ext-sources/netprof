#!/usr/bin/ksh93
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Author: Darren.Moffat@Sun.COM

LD_PRELOAD=/usr/foss/lib/libiconv_plug.so
export LD_PRELOAD
PATH=/usr/foss/bin:/usr/bin:/usr/sbin
VERSION=1.19

G=1

error()
{
	if [ "$1" = "1" ]; then
		shift
		zenity --error --title "Network Chooser $VERSION" --text="$@"
	else
		shift
		print -u 2 "$@"
	fi	
}

show_progress()
{
	if [ "$1" = "1" ]; then
		zenity --progress --auto-close --pulsate \
			--title="$choosen" --percentage=0
	else 
		read msg
		while [ "$msg" != "100" ]; do
			print $msg
			read msg
		done
	fi
}

#
# Check User has the profile, otherwise this won't work.
if [ "$LOGNAME" != "root" ]; then
	if ! profiles $LOGNAME | grep "^Network Management$" > /dev/null ; then
		error $G "This user does not appear to have the 'Network Management' RBAC profile.  Please see netprof(1) for details. Exiting in error."
		exit 2
	fi
fi


PROFILE_DIR=/etc/netprof

PROFILES=`(cd $PROFILE_DIR && /bin/ls -1)`

staticconfig=$(/bin/ls /etc/hostname.* /etc/dhcp.* 2>/dev/null)

if [ ! -z "$staticconfig" ]; then
	error $G "Your machine is configured to have networking start at boot. This is incompatible with how netprof is intended to be used, please remove the following files:\n\n$staticconfig"
		exit 2
fi

if ifconfig ip.tun0 > /dev/null 2>&1 ; then
	if [ -r /var/run/punchinpoint -a /usr/local/bin/client_start ]; then
		error $G "A Punchin tunnel is active run client_stop first"
		exit 2
	fi
fi
		
if [ "$1" = "" ]; then
	choosen=$(zenity --list --title="Network Chooser $VERSION" --height=300\
		--column Profile Standalone $PROFILES)
	[ $? != 0 ] && exit
else
	choosen=$1
	G=0
fi

(
print "# Bringing down existing interfaces"
UP_INTERFACES=$(ifconfig -a | \
	egrep "flags=.*UP" | egrep -v "flags=.*VIRTUAL" | cut -d: -f1)

for i in $UP_INTERFACES ; do
	if ifconfig $i | grep DHCP ; then
		ifconfig $i dhcp release
	fi
	ifconfig $i unplumb
done
route -f flush

if [ "$choosen" == "Standalone" ]; then
	rm -f /etc/defaultdomain
	svcadm restart svc:/system/identity:domain
	domainname '' # Shouldn't be required but it is for now
	rm -f /etc/resolv.conf
	svcadm disable -t svc:/network/dns/client
	print "100"
	exit 0
fi

# Get profile settings and plumb interface
# We take the first one from INTERFACES that plumbs up.
# The intent here is to allow one of many different wireless interfaces
# eg. pcan1,pcwl0,ath0,if_ndis0 since generally we have only one of them.
. $PROFILE_DIR/$choosen
IFS=,
for i in $INTERFACES ; do
	print "# Trying interface $i"
	ifconfig $i plumb 2> /dev/null
	if [ $? == 0 ]; then
		INTERFACE=$i
		print "# Selected interface $i"
		break;
	fi
done

if [ -z "$INTERFACE" ]; then
	print "# Unable to plumb an interface for profile $choosen"
	print "100"
	error $G "Unable to plumb an interface for profile $choosen"
	exit 0
fi

# Setup WiFi
if [ "$WIFI" = "true" ]; then
	if [ -z "$WIFIPROFILE" ]; then
		print "# WiFi autoconfigure"
		wificonfig -i $INTERFACE autoconf
	else
		print "# WiFi connecting to $WIFIPROFILE"
		wificonfig -i $INTERFACE connect $WIFIPROFILE
	fi
	sleep 2
	essid=$(wificonfig getparam essid | awk '/essid:/ { print $2 }')
	print "# Connected to WLAN: $essid"
	sleep 1
fi

#
# An IPADDR of DHCP means do dhcp on this interface
# If we do DHCP we ignore the DNS & NIS information
if [ "$IPADDR" = "DHCP" ]; then
	print "# Starting DHCP on $INTERFACE"
	ifconfig $INTERFACE dhcp primary start
else
	print "# Static config for $INTERFACE"
	ifconfig $INTERFACE $IPADDR netmask $NETMASK
	ifconfig $INTERFACE up

	if [ ! -z "$DEFAULTROUTER" ]; then
		print "# Adding default route as $DEFAULTROUTER"
		route add default $DEFAULTROUTER
	fi

	if [ ! -z "$DNS_DOMAIN" ]; then
		print "# Setting up static DNS config"
		echo "# Created by netprof `date`" > /etc/resolv.conf
		echo domain $DNS_DOMAIN >> /etc/resolv.conf
		if [ ! -z "$DNS_SEARCH" ]; then
			echo search $DNS_SEARCH >> /etc/resolv.conf
		fi
		for nameserver in $DNS_SERVERS ; do
			echo "nameserver $nameserver" >> /etc/resolv.conf
		done
		svcadm restart svc:/network/dns/client
	fi

	if [ ! -z "$NISDOMAIN" ]; then
		print "# Setting up static NIS config"
		echo $NISDOMAIN > /etc/defaultdomain
		svcadm restart svc:/system/identity:domain
		svcadm enable -t svc:/network/nis/client
	fi
fi
print "100"
) | show_progress $G
