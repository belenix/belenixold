--- okteta/parts/kbytesedit/kbytearrayedit.h.orig	2009-07-03 20:42:47.068152776 +0530
+++ okteta/parts/kbytesedit/kbytearrayedit.h	2009-07-03 20:43:42.698269368 +0530
@@ -66,11 +66,11 @@
     /** hands over to the editor a new byte array.
       * If there exists an old one and autodelete is set the old one gets deleted.
       * @param D pointer to memory
-      * @param DS size of used memory
-      * @param RS real size of the memory
-      * @param KM keep the memory on resize (RS is the maximum size)
+      * @param _DS size of used memory
+      * @param _RS real size of the memory
+      * @param KM keep the memory on resize (_RS is the maximum size)
       */
-    virtual void setData( char *D, int DS, int RS = -1, bool KM = true );
+    virtual void setData( char *D, int _DS, int _RS = -1, bool KM = true );
 
     /** sets the maximal size of the actual byte array. If the actual array is already larger
       * it will not be modified but there can be only done non-inserting actions
--- okteta/parts/kbytesedit/kbytearrayedit.cpp.orig	2009-07-03 20:43:51.877738242 +0530
+++ okteta/parts/kbytesedit/kbytearrayedit.cpp	2009-07-03 20:44:24.059222098 +0530
@@ -46,10 +46,10 @@
 
 
 
-void KByteArrayEdit::setData( char *D, int S, int RS, bool KM )
+void KByteArrayEdit::setData( char *D, int S, int _RS, bool KM )
 {
     KHECore::KByteArrayModel *OldModel = Model;
-    Model = new KHECore::KByteArrayModel( D, S, RS, KM );
+    Model = new KHECore::KByteArrayModel( D, S, _RS, KM );
 
     // get attributes
     Model->setReadOnly( OldModel->isReadOnly() );
