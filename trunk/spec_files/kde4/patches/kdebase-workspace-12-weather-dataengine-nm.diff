diff -ur kdebase-workspace-4.2.3/plasma/dataengines/weather/CMakeLists.txt kdebase-workspace-4.2.3-weather-dataengine-nm/plasma/dataengines/weather/CMakeLists.txt
--- kdebase-workspace-4.2.3/plasma/dataengines/weather/CMakeLists.txt	2008-11-04 21:25:02.000000000 +0100
+++ kdebase-workspace-4.2.3-weather-dataengine-nm/plasma/dataengines/weather/CMakeLists.txt	2009-05-14 04:20:00.000000000 +0200
@@ -2,6 +2,6 @@
 
 SET(weather_SRCS weatherengine.cpp)
 kde4_add_plugin(plasma_engine_weather ${weather_SRCS})
-TARGET_LINK_LIBRARIES (plasma_engine_weather ${KDE4_KIO_LIBS} ${KDE4_PLASMA_LIBS} weather_ion)
+TARGET_LINK_LIBRARIES (plasma_engine_weather ${KDE4_KIO_LIBS} ${KDE4_SOLID_LIBS} ${KDE4_PLASMA_LIBS} weather_ion)
 INSTALL (TARGETS plasma_engine_weather DESTINATION ${PLUGIN_INSTALL_DIR})
 INSTALL (FILES plasma-dataengine-weather.desktop DESTINATION ${SERVICES_INSTALL_DIR})
diff -ur kdebase-workspace-4.2.3/plasma/dataengines/weather/weatherengine.cpp kdebase-workspace-4.2.3-weather-dataengine-nm/plasma/dataengines/weather/weatherengine.cpp
--- kdebase-workspace-4.2.3/plasma/dataengines/weather/weatherengine.cpp	2008-11-12 17:37:22.000000000 +0100
+++ kdebase-workspace-4.2.3-weather-dataengine-nm/plasma/dataengines/weather/weatherengine.cpp	2009-05-14 04:28:53.000000000 +0200
@@ -26,7 +26,7 @@
 class WeatherEngine::Private
 {
 public:
-    Private() {}
+    Private() : m_networkAvailable(false) {}
     ~Private() {
         qDeleteAll(m_ions);
     }
@@ -68,6 +68,7 @@
     KService::List m_ionServices;
     IonInterface::IonDict m_ions;
     KDateTime m_localTime;
+    bool m_networkAvailable;
 };
 
 /**
@@ -235,6 +236,12 @@
 
     // Globally notify all plugins to remove their sources (and unload plugin)
     connect(this, SIGNAL(sourceRemoved(QString)), this, SLOT(removeIonSource(QString)));
+
+    Solid::Networking::Status status = Solid::Networking::status();
+    d->m_networkAvailable = (status == Solid::Networking::Connected ||
+                             status == Solid::Networking::Unknown);
+    connect(Solid::Networking::notifier(), SIGNAL(statusChanged(Solid::Networking::Status)),
+            this, SLOT(networkStatusChanged(Solid::Networking::Status)));
 }
 
 // Destructor
@@ -260,6 +267,11 @@
         }
     }
 
+    if (!d->m_networkAvailable) {
+        setData(source, Data());
+        return true;
+    }
+
     QByteArray str = source.toLocal8Bit();
 
     ion->connectSource(source, this);
@@ -280,18 +292,27 @@
 
     QByteArray str = source.toLocal8Bit();
 
-    kDebug() << "updateSourceEvent()";
+    kDebug() << "updateSourceEvent()" << ion << d->m_networkAvailable;
     if (!ion) {
         return false;
     }
 
+    if (!d->m_networkAvailable) {
+        return false;
+    }
+
     ion->setProperty("timezone", d->m_localTime.isUtc());
     ion->setProperty("unit", KGlobal::locale()->measureSystem());
+    return ion->updateSourceEvent(source);
+}
 
-    if (ion->updateSourceEvent(source)) {
-        return true;
-    } else {
-        return false;
+void WeatherEngine::networkStatusChanged(Solid::Networking::Status status)
+{
+    d->m_networkAvailable = (status == Solid::Networking::Connected || status == Solid::Networking::Unknown);
+    //kDebug() << "status changed" << d->m_networkAvailable;
+
+    if (d->m_networkAvailable) {
+        updateAllSources();
     }
 }
 
diff -ur kdebase-workspace-4.2.3/plasma/dataengines/weather/weatherengine.h kdebase-workspace-4.2.3-weather-dataengine-nm/plasma/dataengines/weather/weatherengine.h
--- kdebase-workspace-4.2.3/plasma/dataengines/weather/weatherengine.h	2008-11-04 18:12:33.000000000 +0100
+++ kdebase-workspace-4.2.3-weather-dataengine-nm/plasma/dataengines/weather/weatherengine.h	2009-05-14 04:20:00.000000000 +0200
@@ -22,7 +22,11 @@
 
 #include <KService>
 #include <KGenericFactory>
+
+#include <Solid/Networking>
+
 #include <Plasma/DataEngine>
+
 #include "ions/ion.h"
 
 class QTimer;
@@ -100,6 +104,11 @@
      */
     bool updateSourceEvent(const QString& source);
 
+    /**
+     * Whenever networking changes, take action
+     */
+    void networkStatusChanged(Solid::Networking::Status);
+
 private:
     class Private;
     Private *const d;
