diff -ur libxfce4util-orig/libxfce4util/libxfce4util-config.h.in libxfce4util/libxfce4util/libxfce4util-config.h.in
--- libxfce4util-orig/libxfce4util/libxfce4util-config.h.in	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/libxfce4util-config.h.in	2007-04-07 20:24:00.947940348 +0700
@@ -28,7 +28,7 @@
 
 #include <glib.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 #define LIBXFCE4UTIL_MAJOR_VERSION	@LIBXFCE4UTIL_VERSION_MAJOR@
 #define LIBXFCE4UTIL_MINOR_VERSION	@LIBXFCE4UTIL_VERSION_MINOR@
@@ -55,6 +55,6 @@
 #endif /* __GNUC__ */
 #endif /* !defined(G_GNUC_WARN_UNUSED_RESULT) */
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif	/* !__LIBXFCE4UTIL_CONFIG_H__ */
diff -ur libxfce4util-orig/libxfce4util/libxfce4util-private.h libxfce4util/libxfce4util/libxfce4util-private.h
--- libxfce4util-orig/libxfce4util/libxfce4util-private.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/libxfce4util-private.h	2007-04-07 20:24:00.948160383 +0700
@@ -28,10 +28,10 @@
 
 #include <libxfce4util/libxfce4util.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
-void _xfce_i18n_init (void) G_GNUC_INTERNAL;
+G_GNUC_INTERNAL void _xfce_i18n_init (void);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__LIBXFCE4UTIL_PRIVATE_H__ */
diff -ur libxfce4util-orig/libxfce4util/xfce-generics.h libxfce4util/libxfce4util/xfce-generics.h
--- libxfce4util-orig/libxfce4util/xfce-generics.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/xfce-generics.h	2007-04-07 20:24:00.948378383 +0700
@@ -28,7 +28,7 @@
 
 #include <glib.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 #define XFCE_GENERIC_STACK(Type)                                            \
   struct                                                                    \
@@ -112,6 +112,6 @@
     }                                                                       \
   G_STMT_END
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__XFCE_GENERICS_H__ */
diff -ur libxfce4util-orig/libxfce4util/xfce-kiosk.h libxfce4util/libxfce4util/xfce-kiosk.h
--- libxfce4util-orig/libxfce4util/xfce-kiosk.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/xfce-kiosk.h	2007-04-07 20:24:00.948540376 +0700
@@ -28,7 +28,7 @@
 
 #include <glib.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 #define XFCE_KIOSK(obj) ((XfceKiosk *)(obj))
 
@@ -40,6 +40,6 @@
                              const gchar     *capability);
 void       xfce_kiosk_free  (XfceKiosk       *kiosk);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__XFCE_KIOSK_H__ */
diff -ur libxfce4util-orig/libxfce4util/xfce-license.h libxfce4util/libxfce4util/xfce-license.h
--- libxfce4util-orig/libxfce4util/xfce-license.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/xfce-license.h	2007-04-07 20:24:00.948701115 +0700
@@ -26,7 +26,7 @@
 #ifndef __XFCE_LICENSE_H__
 #define __XFCE_LICENSE_H__
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 /**
  * XfceLicenseTextType:
@@ -49,6 +49,6 @@
 #define XFCE_LICENSE_GPL  (xfce_get_license_text (XFCE_LICENSE_TEXT_GPL))
 #define XFCE_LICENSE_LGPL (xfce_get_license_text (XFCE_LICENSE_TEXT_LGPL))
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__XFCE_LICENSE_H__ */
diff -ur libxfce4util-orig/libxfce4util/xfce-private.h libxfce4util/libxfce4util/xfce-private.h
--- libxfce4util-orig/libxfce4util/xfce-private.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/xfce-private.h	2007-04-07 20:24:43.053150351 +0700
@@ -28,7 +28,7 @@
 
 #include <glib-object.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 /* support macros for debugging */
 #ifndef NDEBUG
@@ -82,7 +82,7 @@
 #define g_value_get_object(v)   (((const GValue *) (v))->data[0].v_pointer)
 #endif
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__XFCE_RC_H__ */
 
diff -ur libxfce4util-orig/libxfce4util/xfce-rc-private.h libxfce4util/libxfce4util/xfce-rc-private.h
--- libxfce4util-orig/libxfce4util/xfce-rc-private.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/xfce-rc-private.h	2007-04-07 20:24:00.949026741 +0700
@@ -61,71 +61,89 @@
 #define XFCE_RC_SIMPLE_CONST(obj) ((const XfceRcSimple *) (obj))
 
 
-void          _xfce_rc_init               (XfceRc       *rc) G_GNUC_INTERNAL;
+G_GNUC_INTERNAL void          _xfce_rc_init               (XfceRc       *rc);
 
+G_GNUC_INTERNAL
 XfceRcSimple* _xfce_rc_simple_new         (XfceRcSimple *shared,
                                            const gchar  *filename,
-                                           gboolean      readonly) G_GNUC_INTERNAL;
-gboolean      _xfce_rc_simple_parse       (XfceRcSimple *simple) G_GNUC_INTERNAL;
-void          _xfce_rc_simple_close       (XfceRc       *rc) G_GNUC_INTERNAL;
-void          _xfce_rc_simple_flush       (XfceRc       *rc) G_GNUC_INTERNAL;
-void          _xfce_rc_simple_rollback    (XfceRc       *rc) G_GNUC_INTERNAL;
-gboolean      _xfce_rc_simple_is_dirty    (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
-gboolean      _xfce_rc_simple_is_readonly (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
-const gchar*  _xfce_rc_simple_get_filename(const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
-gchar**       _xfce_rc_simple_get_groups  (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           gboolean      readonly);
+G_GNUC_INTERNAL gboolean      _xfce_rc_simple_parse       (XfceRcSimple *simple);
+G_GNUC_INTERNAL void          _xfce_rc_simple_close       (XfceRc       *rc);
+G_GNUC_INTERNAL void          _xfce_rc_simple_flush       (XfceRc       *rc);
+G_GNUC_INTERNAL void          _xfce_rc_simple_rollback    (XfceRc       *rc);
+G_GNUC_CONST G_GNUC_INTERNAL gboolean      _xfce_rc_simple_is_dirty    (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL gboolean      _xfce_rc_simple_is_readonly (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL const gchar*  _xfce_rc_simple_get_filename(const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL gchar**       _xfce_rc_simple_get_groups  (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL
 gchar**       _xfce_rc_simple_get_entries (const XfceRc *rc,
-                                           const gchar  *name) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           const gchar  *name);
+G_GNUC_INTERNAL
 void          _xfce_rc_simple_delete_group(XfceRc       *rc,
                                            const gchar  *name,
-                                           gboolean      global) G_GNUC_INTERNAL;
-const gchar*  _xfce_rc_simple_get_group   (const XfceRc *rc) G_GNUC_CONST;
+                                           gboolean      global);
+G_GNUC_CONST const gchar*  _xfce_rc_simple_get_group   (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL
 gboolean      _xfce_rc_simple_has_group   (const XfceRc *rc,
-                                           const gchar  *name) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           const gchar  *name);
+G_GNUC_INTERNAL
 void          _xfce_rc_simple_set_group   (XfceRc       *rc,
-                                           const gchar  *name) G_GNUC_INTERNAL;
+                                           const gchar  *name);
+G_GNUC_INTERNAL
 void          _xfce_rc_simple_delete_entry(XfceRc       *rc,
                                            const gchar  *key,
-                                           gboolean      global) G_GNUC_INTERNAL;
+                                           gboolean      global);
+G_GNUC_CONST G_GNUC_INTERNAL
 gboolean      _xfce_rc_simple_has_entry   (const XfceRc *rc,
-                                           const gchar  *key) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           const gchar  *key);
+G_GNUC_CONST G_GNUC_INTERNAL
 const gchar*  _xfce_rc_simple_read_entry  (const XfceRc *rc,
                                            const gchar  *key,
-                                           gboolean      translated) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           gboolean      translated);
+G_GNUC_INTERNAL
 void          _xfce_rc_simple_write_entry (XfceRc       *rc,
                                            const gchar  *key,
-                                           const gchar  *value) G_GNUC_INTERNAL;
+                                           const gchar  *value);
 
+G_GNUC_INTERNAL
 XfceRcConfig* _xfce_rc_config_new         (XfceResourceType type,
                                            const gchar  *resource,
-                                           gboolean      readonly) G_GNUC_INTERNAL;
-void          _xfce_rc_config_close       (XfceRc       *rc) G_GNUC_INTERNAL;
-void          _xfce_rc_config_flush       (XfceRc       *rc) G_GNUC_INTERNAL;
-void          _xfce_rc_config_rollback    (XfceRc       *rc) G_GNUC_INTERNAL;
-gboolean      _xfce_rc_config_is_dirty    (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
-gboolean      _xfce_rc_config_is_readonly (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
-gchar**       _xfce_rc_config_get_groups  (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           gboolean      readonly);
+G_GNUC_INTERNAL void          _xfce_rc_config_close       (XfceRc       *rc);
+G_GNUC_INTERNAL void          _xfce_rc_config_flush       (XfceRc       *rc);
+G_GNUC_INTERNAL void          _xfce_rc_config_rollback    (XfceRc       *rc);
+G_GNUC_CONST G_GNUC_INTERNAL gboolean      _xfce_rc_config_is_dirty    (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL gboolean      _xfce_rc_config_is_readonly (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL gchar**       _xfce_rc_config_get_groups  (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL
 gchar**       _xfce_rc_config_get_entries (const XfceRc *rc,
-                                           const gchar  *name) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           const gchar  *name);
+G_GNUC_INTERNAL
 void          _xfce_rc_config_delete_group(XfceRc       *rc,
                                            const gchar  *name,
-                                           gboolean      global) G_GNUC_INTERNAL;
-const gchar*  _xfce_rc_config_get_group   (const XfceRc *rc) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           gboolean      global);
+G_GNUC_CONST G_GNUC_INTERNAL const gchar*  _xfce_rc_config_get_group   (const XfceRc *rc);
+G_GNUC_CONST G_GNUC_INTERNAL
 gboolean      _xfce_rc_config_has_group   (const XfceRc *rc,
-                                           const gchar  *name) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           const gchar  *name);
+G_GNUC_INTERNAL
 void          _xfce_rc_config_set_group   (XfceRc       *rc,
-                                           const gchar  *name) G_GNUC_INTERNAL;
+                                           const gchar  *name);
+G_GNUC_INTERNAL
 void          _xfce_rc_config_delete_entry(XfceRc       *rc,
                                            const gchar  *key,
-                                           gboolean      global) G_GNUC_INTERNAL;
+                                           gboolean      global);
+G_GNUC_CONST G_GNUC_INTERNAL
 gboolean      _xfce_rc_config_has_entry   (const XfceRc *rc,
-                                           const gchar  *key) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           const gchar  *key);
+G_GNUC_CONST G_GNUC_INTERNAL
 const gchar*  _xfce_rc_config_read_entry  (const XfceRc *rc,
                                            const gchar  *key,
-                                           gboolean      translated) G_GNUC_CONST G_GNUC_INTERNAL;
+                                           gboolean      translated);
+G_GNUC_INTERNAL
 void          _xfce_rc_config_write_entry (XfceRc       *rc,
                                            const gchar  *key,
-                                           const gchar  *value) G_GNUC_INTERNAL;
+                                           const gchar  *value);
 
 
 #endif /* !__LIBXFCE4UTIL_XFCE_RC_PRIVATE_H__ */
diff -ur libxfce4util-orig/libxfce4util/xfce-rc.h libxfce4util/libxfce4util/xfce-rc.h
--- libxfce4util-orig/libxfce4util/xfce-rc.h	2007-04-07 09:34:04.000000000 +0700
+++ libxfce4util/libxfce4util/xfce-rc.h	2007-04-07 20:24:00.949290898 +0700
@@ -28,63 +28,78 @@
 
 #include <libxfce4util/xfce-resource.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 typedef struct _XfceRc XfceRc;
 
 #define XFCE_RC(obj)       ((XfceRc *) (obj))
 #define XFCE_RC_CONST(obj) ((const XfceRc *) (obj))
 
+G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 XfceRc*      xfce_rc_simple_open             (const gchar     *filename,
-                                              gboolean         readonly) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                              gboolean         readonly);
 
+G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 XfceRc*      xfce_rc_config_open             (XfceResourceType type,
                                               const gchar     *resource,
-                                              gboolean         readonly) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                              gboolean         readonly);
 
 void         xfce_rc_close                   (XfceRc *rc);
 void         xfce_rc_flush                   (XfceRc *rc);
 void         xfce_rc_rollback                (XfceRc *rc);
 
-gboolean     xfce_rc_is_dirty                (const XfceRc *rc) G_GNUC_WARN_UNUSED_RESULT;
-gboolean     xfce_rc_is_readonly             (const XfceRc *rc) G_GNUC_WARN_UNUSED_RESULT;
-
-const gchar* xfce_rc_get_locale              (const XfceRc *rc) G_GNUC_WARN_UNUSED_RESULT;
-
-gchar**      xfce_rc_get_groups              (const XfceRc *rc) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+G_GNUC_WARN_UNUSED_RESULT
+gboolean     xfce_rc_is_dirty                (const XfceRc *rc);
+G_GNUC_WARN_UNUSED_RESULT
+gboolean     xfce_rc_is_readonly             (const XfceRc *rc);
+
+G_GNUC_WARN_UNUSED_RESULT
+const gchar* xfce_rc_get_locale              (const XfceRc *rc);
+
+G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
+gchar**      xfce_rc_get_groups              (const XfceRc *rc);
+G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 gchar**      xfce_rc_get_entries             (const XfceRc *rc,
-                                              const gchar  *group) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                              const gchar  *group);
 
+G_GNUC_WARN_UNUSED_RESULT
 void         xfce_rc_delete_group            (XfceRc       *rc,
                                               const gchar  *group,
                                               gboolean      global);
-const gchar* xfce_rc_get_group               (const XfceRc *rc) G_GNUC_WARN_UNUSED_RESULT;
+const gchar* xfce_rc_get_group               (const XfceRc *rc);
+G_GNUC_WARN_UNUSED_RESULT
 gboolean     xfce_rc_has_group               (const XfceRc *rc,
-                                              const gchar  *group) G_GNUC_WARN_UNUSED_RESULT;
+                                              const gchar  *group);
 void         xfce_rc_set_group               (XfceRc       *rc,
                                               const gchar  *group);
 
 void         xfce_rc_delete_entry            (XfceRc       *rc,
                                               const gchar  *key,
                                               gboolean      global);
+G_GNUC_WARN_UNUSED_RESULT
 gboolean     xfce_rc_has_entry               (const XfceRc *rc,
-                                              const gchar  *key) G_GNUC_WARN_UNUSED_RESULT;
+                                              const gchar  *key);
 
+G_GNUC_WARN_UNUSED_RESULT
 const gchar* xfce_rc_read_entry              (const XfceRc *rc,
                                               const gchar  *key,
-                                              const gchar  *fallback) G_GNUC_WARN_UNUSED_RESULT;
+                                              const gchar  *fallback);
+G_GNUC_WARN_UNUSED_RESULT
 const gchar* xfce_rc_read_entry_untranslated (const XfceRc *rc,
                                               const gchar  *key,
-                                              const gchar  *fallback) G_GNUC_WARN_UNUSED_RESULT;
+                                              const gchar  *fallback);
+G_GNUC_WARN_UNUSED_RESULT
 gboolean     xfce_rc_read_bool_entry         (const XfceRc *rc,
                                               const gchar  *key,
-                                              gboolean      fallback) G_GNUC_WARN_UNUSED_RESULT;
+                                              gboolean      fallback);
+G_GNUC_WARN_UNUSED_RESULT
 gint         xfce_rc_read_int_entry          (const XfceRc *rc,
                                               const gchar  *key,
-                                              gint          fallback) G_GNUC_WARN_UNUSED_RESULT;
+                                              gint          fallback);
+G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 gchar**      xfce_rc_read_list_entry         (const XfceRc *rc,
                                               const gchar  *key,
-                                              const gchar  *delimiter) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                              const gchar  *delimiter);
 void         xfce_rc_write_entry             (XfceRc       *rc,
                                               const gchar  *key,
                                               const gchar  *value);
@@ -99,7 +114,7 @@
                                               gchar       **value,
                                               const gchar  *separator);
  
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__XFCE_RC_H__ */
 
