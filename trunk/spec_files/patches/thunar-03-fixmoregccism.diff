--- Thunar-0.9.0/plugins/thunar-sbr/thunar-sbr-enum-types.h.fixmoregccism	2007-12-10 00:11:39.709229576 +0100
+++ Thunar-0.9.0/plugins/thunar-sbr/thunar-sbr-enum-types.h	2007-12-10 00:14:56.696840086 +0100
@@ -23,7 +23,7 @@
 
 #include <thunarx/thunarx.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 #define THUNAR_SBR_TYPE_CASE_RENAMER_MODE (thunar_sbr_case_renamer_mode_get_type ())
 
@@ -42,7 +42,7 @@
   THUNAR_SBR_CASE_RENAMER_MODE_CAMEL,
 } ThunarSbrCaseRenamerMode;
 
-GType thunar_sbr_case_renamer_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_sbr_case_renamer_mode_get_type (void);
 
 
 #define THUNAR_SBR_TYPE_INSERT_MODE (thunar_sbr_insert_mode_get_type ())
@@ -60,7 +60,7 @@
   THUNAR_SBR_INSERT_MODE_OVERWRITE,
 } ThunarSbrInsertMode;
 
-GType thunar_sbr_insert_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_sbr_insert_mode_get_type (void);
 
 
 #define THUNAR_SBR_TYPE_NUMBER_MODE (thunar_sbr_number_mode_get_type ())
@@ -84,7 +84,7 @@
   THUNAR_SBR_NUMBER_MODE_ABC,
 } ThunarSbrNumberMode;
 
-GType thunar_sbr_number_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_sbr_number_mode_get_type (void);
 
 
 #define THUNAR_SBR_TYPE_OFFSET_MODE (thunar_sbr_offset_mode_get_type ())
@@ -103,7 +103,7 @@
   THUNAR_SBR_OFFSET_MODE_RIGHT,
 } ThunarSbrOffsetMode;
 
-GType thunar_sbr_offset_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_sbr_offset_mode_get_type (void);
 
 
 #define THUNAR_SBR_TYPE_TEXT_MODE (thunar_sbr_text_mode_get_type ())
@@ -125,7 +125,7 @@
   THUNAR_SBR_TEXT_MODE_NT,
 } ThunarSbrTextMode;
 
-GType thunar_sbr_text_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_sbr_text_mode_get_type (void);
 
 
 #define THUNAR_SBR_TYPE_DATE_MODE (thunar_sbr_date_mode_get_type ())
@@ -149,11 +149,11 @@
 #endif
 } ThunarSbrDateMode;
 
-GType thunar_sbr_date_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_sbr_date_mode_get_type (void);
 
 
-void thunar_sbr_register_enum_types (ThunarxProviderPlugin *plugin) G_GNUC_INTERNAL;
+G_GNUC_INTERNAL void thunar_sbr_register_enum_types (ThunarxProviderPlugin *plugin);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_SBR_ENUM_TYPES_H__ */
--- Thunar-0.9.0/thunar/thunar-util.h.fixmoregccism	2007-12-10 00:32:26.384790990 +0100
+++ Thunar-0.9.0/thunar/thunar-util.h	2007-12-10 00:34:38.666101908 +0100
@@ -24,18 +24,22 @@
 
 #include <thunar/thunar-enum-types.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
-gboolean   thunar_util_looks_like_an_uri  (const gchar      *string) G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT;
+G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT
+gboolean   thunar_util_looks_like_an_uri  (const gchar      *string);
 
+G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 gchar     *thunar_util_humanize_file_time (ThunarVfsFileTime file_time,
-                                           ThunarDateStyle   date_style) G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                           ThunarDateStyle   date_style);
 
+G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT
 GdkScreen *thunar_util_parse_parent       (gpointer          parent,
-                                           GtkWindow       **window_return) G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT;
+                                           GtkWindow       **window_return);
 
-time_t     thunar_util_time_from_rfc3339  (const gchar      *date_string) G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT;
+G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT
+time_t     thunar_util_time_from_rfc3339  (const gchar      *date_string);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_UTIL_H__ */
--- Thunar-0.9.0/thunar/thunar-enum-types.h.fixmoregccism	2007-12-10 00:26:29.103074552 +0100
+++ Thunar-0.9.0/thunar/thunar-enum-types.h	2007-12-10 00:30:31.718253069 +0100
@@ -22,7 +22,7 @@
 
 #include <exo/exo.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 #define THUNAR_TYPE_RENAMER_MODE (thunar_renamer_mode_get_type ())
 
@@ -41,7 +41,7 @@
   THUNAR_RENAMER_MODE_BOTH,
 } ThunarRenamerMode;
 
-GType thunar_renamer_mode_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_renamer_mode_get_type (void);
 
 
 #define THUNAR_TYPE_COLOR_STYLE (thunar_color_style_get_type ())
@@ -61,7 +61,7 @@
   THUNAR_COLOR_STYLE_VGRADIENT,
 } ThunarColorStyle;
 
-GType thunar_color_style_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_color_style_get_type (void);
 
 
 #define THUNAR_TYPE_DATE_STYLE (thunar_date_style_get_type ())
@@ -83,7 +83,7 @@
   THUNAR_DATE_STYLE_ISO,
 } ThunarDateStyle;
 
-GType thunar_date_style_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_date_style_get_type (void);
 
 
 #define THUNAR_TYPE_COLUMN (thunar_column_get_type ())
@@ -129,7 +129,7 @@
   THUNAR_N_VISIBLE_COLUMNS = THUNAR_COLUMN_FILE,
 } ThunarColumn;
 
-GType thunar_column_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_column_get_type (void);
 
 
 #define THUNAR_TYPE_ICON_SIZE (thunar_icon_size_get_type ())
@@ -157,7 +157,7 @@
   THUNAR_ICON_SIZE_LARGEST  = 128,
 } ThunarIconSize;
 
-GType thunar_icon_size_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_icon_size_get_type (void);
 
 
 #define THUNAR_TYPE_RECURSIVE_PERMISSIONS (thunar_recursive_permissions_get_type ())
@@ -177,7 +177,7 @@
   THUNAR_RECURSIVE_PERMISSIONS_NEVER,
 } ThunarRecursivePermissionsMode;
 
-GType thunar_recursive_permissions_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_recursive_permissions_get_type (void);
 
 
 #define THUNAR_TYPE_WALLPAPER_STYLE (thunar_wallpaper_style_get_type ())
@@ -199,7 +199,7 @@
   THUNAR_WALLPAPER_STYLE_TILED,
 } ThunarWallpaperStyle;
 
-GType thunar_wallpaper_style_get_type (void) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType thunar_wallpaper_style_get_type (void);
 
 
 #define THUNAR_TYPE_ZOOM_LEVEL (thunar_zoom_level_get_type ())
@@ -231,9 +231,9 @@
   THUNAR_ZOOM_N_LEVELS,
 } ThunarZoomLevel;
 
-GType          thunar_zoom_level_get_type     (void) G_GNUC_CONST G_GNUC_INTERNAL;
-ThunarIconSize thunar_zoom_level_to_icon_size (ThunarZoomLevel zoom_level) G_GNUC_CONST G_GNUC_INTERNAL;
+G_GNUC_CONST G_GNUC_INTERNAL GType          thunar_zoom_level_get_type     (void);
+G_GNUC_CONST G_GNUC_INTERNAL ThunarIconSize thunar_zoom_level_to_icon_size (ThunarZoomLevel zoom_level);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_ENUM_TYPES_H__ */
--- Thunar-0.9.0/thunar/thunar-list-model.h.fixmoregccism	2007-12-10 00:31:13.064586818 +0100
+++ Thunar-0.9.0/thunar/thunar-list-model.h	2007-12-10 00:32:09.429922609 +0100
@@ -22,7 +22,7 @@
 
 #include <thunar/thunar-folder.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 typedef struct _ThunarListModelClass ThunarListModelClass;
 typedef struct _ThunarListModel      ThunarListModel;
@@ -34,7 +34,7 @@
 #define THUNAR_IS_LIST_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), THUNAR_TYPE_LIST_MODEL))
 #define THUNAR_LIST_MODEL_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), THUNAR_TYPE_LIST_MODEL, ThunarListModelClass))
 
-GType            thunar_list_model_get_type               (void) G_GNUC_CONST;
+G_GNUC_CONST GType            thunar_list_model_get_type               (void);
 
 ThunarListModel *thunar_list_model_new                    (void);
 ThunarListModel *thunar_list_model_new_with_folder        (ThunarFolder     *folder);
@@ -72,6 +72,6 @@
 gchar           *thunar_list_model_get_statusbar_text     (ThunarListModel  *store,
                                                            GList            *selected_items);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_LIST_MODEL_H__ */
--- Thunar-0.9.0/thunar/thunar-dialogs.h.fixmoregccism	2007-12-10 00:15:55.588914792 +0100
+++ Thunar-0.9.0/thunar/thunar-dialogs.h	2007-12-10 00:26:12.645532626 +0100
@@ -22,33 +22,39 @@
 
 #include <thunar-vfs/thunar-vfs.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
+G_GNUC_INTERNAL
 void                  thunar_dialogs_show_about           (GtkWindow            *parent,
                                                            const gchar          *title,
                                                            const gchar          *format,
-                                                           ...) G_GNUC_INTERNAL G_GNUC_PRINTF (3, 4);
+                                                           ...) G_GNUC_PRINTF (3, 4);
 
+G_GNUC_INTERNAL
 void                  thunar_dialogs_show_error           (gpointer              parent,
                                                            const GError         *error,
                                                            const gchar          *format,
-                                                           ...) G_GNUC_INTERNAL G_GNUC_PRINTF (3, 4);
+                                                           ...) G_GNUC_PRINTF (3, 4);
 
+G_GNUC_INTERNAL
 void                  thunar_dialogs_show_help            (gpointer              parent,
                                                            const gchar          *page,
-                                                           const gchar          *offset) G_GNUC_INTERNAL;
+                                                           const gchar          *offset);
 
+G_GNUC_INTERNAL
 ThunarVfsJobResponse  thunar_dialogs_show_job_ask         (GtkWindow            *parent,
                                                            const gchar          *question,
-                                                           ThunarVfsJobResponse  choices) G_GNUC_INTERNAL;
+                                                           ThunarVfsJobResponse  choices);
 
+G_GNUC_INTERNAL
 ThunarVfsJobResponse  thunar_dialogs_show_job_ask_replace (GtkWindow            *parent,
                                                            ThunarVfsInfo        *src_info,
-                                                           ThunarVfsInfo        *dst_info) G_GNUC_INTERNAL;
+                                                           ThunarVfsInfo        *dst_info);
 
+G_GNUC_INTERNAL
 void                  thunar_dialogs_show_job_error       (GtkWindow            *parent,
-                                                           GError               *error) G_GNUC_INTERNAL;
+                                                           GError               *error);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_DIALOGS_H__ */
--- Thunar-0.9.0/thunar-vfs/thunar-vfs-path-private.h.fixmoregccism	2007-12-10 00:54:12.088213815 +0100
+++ Thunar-0.9.0/thunar-vfs/thunar-vfs-path-private.h	2007-12-10 00:57:44.546589145 +0100
@@ -27,7 +27,7 @@
 
 #include <thunar-vfs/thunar-vfs-path.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 /* Support macros for compilers that don't support proper inlining */
 #if !defined(G_CAN_INLINE) && !defined(__THUNAR_VFS_PATH_C__) && !defined(__THUNAR_VFS_INFO_C__)
@@ -41,24 +41,29 @@
 #endif /* !defined(G_CAN_INLINE) && !defined(__THUNAR_VFS_PATH_C__) && !defined(__THUNAR_VFS_INFO_C__) */
 
 /* global shared variables */
-extern ThunarVfsPath *_thunar_vfs_path_trash_root G_GNUC_INTERNAL;
+G_GNUC_INTERNAL extern ThunarVfsPath *_thunar_vfs_path_trash_root;
 
 /* initialization/shutdown routines */
-void _thunar_vfs_path_init     (void) G_GNUC_INTERNAL;
-void _thunar_vfs_path_shutdown (void) G_GNUC_INTERNAL;
+G_GNUC_INTERNAL void _thunar_vfs_path_init     (void);
+G_GNUC_INTERNAL void _thunar_vfs_path_shutdown (void);
 
 /* internal support methods */
+G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 ThunarVfsPath *_thunar_vfs_path_new_relative          (ThunarVfsPath        *parent,
-                                                       const gchar          *relative_path) G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                                       const gchar          *relative_path);
+G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT
 ThunarVfsPath *_thunar_vfs_path_child                 (ThunarVfsPath        *parent,
-                                                       const gchar          *name) G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT;
-gchar         *_thunar_vfs_path_dup_display_name      (const ThunarVfsPath  *path) G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                                       const gchar          *name);
+G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
+gchar         *_thunar_vfs_path_dup_display_name      (const ThunarVfsPath  *path);
+G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 ThunarVfsPath *_thunar_vfs_path_translate             (ThunarVfsPath        *src_path,
                                                        ThunarVfsPathScheme   dst_scheme,
-                                                       GError              **error) G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                                       GError              **error);
+G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT
 gchar         *_thunar_vfs_path_translate_dup_string  (ThunarVfsPath        *src_path,
                                                        ThunarVfsPathScheme   dst_scheme,
-                                                       GError              **error) G_GNUC_INTERNAL G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+                                                       GError              **error);
 
 /**
  * _thunar_vfs_path_unref_nofree:
@@ -95,7 +100,7 @@
  **/
 #define _thunar_vfs_path_is_trash(path) (thunar_vfs_path_get_scheme ((path)) == THUNAR_VFS_PATH_SCHEME_TRASH)
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_VFS_PATH_PRIVATE_H__ */
 
--- Thunar-0.9.0/thunar-vfs/thunar-vfs-job-private.h.fixmoregccism	2007-12-10 00:35:23.617392951 +0100
+++ Thunar-0.9.0/thunar-vfs/thunar-vfs-job-private.h	2007-12-10 00:39:42.618588538 +0100
@@ -28,9 +28,10 @@
 #include <thunar-vfs/thunar-vfs-config.h>
 #include <thunar-vfs/thunar-vfs-job.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 /* generic routines for synchronous signal emission */
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_emit_valist     (ThunarVfsJob        *job,
                                                        guint                signal_id,
                                                        GQuark               signal_detail,
@@ -38,9 +39,10 @@
 void                  _thunar_vfs_job_emit            (ThunarVfsJob        *job,
                                                        guint                signal_id,
                                                        GQuark               signal_detail,
-                                                       ...) G_GNUC_INTERNAL;
+                                                       ...);
 
 /* generic routines for asynchronous signal emission */
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_notify_valist   (ThunarVfsJob        *job,
                                                        guint                signal_id,
                                                        GQuark               signal_detail,
@@ -48,9 +50,10 @@
 void                  _thunar_vfs_job_notify          (ThunarVfsJob        *job,
                                                        guint                signal_id,
                                                        GQuark               signal_detail,
-                                                       ...) G_GNUC_INTERNAL;
+                                                       ...);
 
 /* special routines for signal emission */
+G_GNUC_INTERNAL
 ThunarVfsJobResponse  _thunar_vfs_job_ask_valist      (ThunarVfsJob        *job,
                                                        const gchar         *format,
                                                        va_list              var_args,
@@ -58,34 +61,43 @@
                                                        ThunarVfsJobResponse choices) G_GNUC_INTERNAL;
 ThunarVfsJobResponse  _thunar_vfs_job_ask_overwrite   (ThunarVfsJob        *job,
                                                        const gchar         *format,
-                                                       ...) G_GNUC_INTERNAL G_GNUC_PRINTF (2, 3);
+                                                       ...) G_GNUC_PRINTF (2, 3);
+G_GNUC_INTERNAL
 ThunarVfsJobResponse  _thunar_vfs_job_ask_replace     (ThunarVfsJob        *job,
                                                        ThunarVfsPath       *src_path,
                                                        ThunarVfsPath       *dst_path) G_GNUC_INTERNAL;
 ThunarVfsJobResponse  _thunar_vfs_job_ask_skip        (ThunarVfsJob        *job,
                                                        const gchar         *format,
-                                                       ...) G_GNUC_INTERNAL G_GNUC_PRINTF (2, 3);
+                                                       ...) G_GNUC_PRINTF (2, 3);
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_error           (ThunarVfsJob        *job,
                                                        GError              *error) G_GNUC_INTERNAL;
 void                  _thunar_vfs_job_info_message    (ThunarVfsJob        *job,
-                                                       const gchar         *format) G_GNUC_INTERNAL;
+                                                       const gchar         *format);
+G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT
 gboolean              _thunar_vfs_job_infos_ready     (ThunarVfsJob        *job,
-                                                       GList               *info_list) G_GNUC_INTERNAL G_GNUC_WARN_UNUSED_RESULT;
+                                                       GList               *info_list);
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_new_files       (ThunarVfsJob        *job,
-                                                       const GList         *path_list) G_GNUC_INTERNAL;
+                                                       const GList         *path_list);
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_percent         (ThunarVfsJob        *job,
-                                                       gdouble              percent) G_GNUC_INTERNAL;
+                                                       gdouble              percent);
 
 /* special routines for path based jobs */
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_total_paths     (ThunarVfsJob        *job,
-                                                       GList               *total_paths) G_GNUC_INTERNAL;
+                                                       GList               *total_paths);
+G_GNUC_INTERNAL
 void                  _thunar_vfs_job_process_path    (ThunarVfsJob        *job,
-                                                       GList               *path_list_item) G_GNUC_INTERNAL;
+                                                       GList               *path_list_item);
 
 /* initialization and shutdown routines */
-void                  _thunar_vfs_job_init            (void) G_GNUC_INTERNAL;
-void                  _thunar_vfs_job_shutdown        (void) G_GNUC_INTERNAL;
+G_GNUC_INTERNAL
+void                  _thunar_vfs_job_init            (void);
+G_GNUC_INTERNAL
+void                  _thunar_vfs_job_shutdown        (void);
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_VFS_JOB_PRIVATE_H__ */
--- Thunar-0.9.0/thunar-vfs/thunar-vfs-job.h.fixmoregccism	2007-12-10 00:46:48.033916730 +0100
+++ Thunar-0.9.0/thunar-vfs/thunar-vfs-job.h	2007-12-10 00:47:30.272886551 +0100
@@ -27,7 +27,7 @@
 
 #include <thunar-vfs/thunar-vfs-info.h>
 
-G_BEGIN_DECLS;
+G_BEGIN_DECLS
 
 typedef struct _ThunarVfsJobPrivate ThunarVfsJobPrivate;
 typedef struct _ThunarVfsJobClass   ThunarVfsJobClass;
@@ -119,6 +119,6 @@
 #endif /* G_CAN_INLINE || __THUNAR_VFS_JOB_C__ */
 
 
-G_END_DECLS;
+G_END_DECLS
 
 #endif /* !__THUNAR_VFS_JOB_H__ */
--- Thunar-0.9.0/thunar-vfs/thunar-vfs-marshal.h.fixmoregccism	2007-12-10 00:47:44.946696204 +0100
+++ Thunar-0.9.0/thunar-vfs/thunar-vfs-marshal.h	2007-12-10 00:53:49.494486290 +0100
@@ -7,36 +7,40 @@
 G_BEGIN_DECLS
 
 /* BOOLEAN:POINTER (thunar-vfs-marshal.list:1) */
+G_GNUC_INTERNAL
 extern void _thunar_vfs_marshal_BOOLEAN__POINTER (GClosure     *closure,
                                                   GValue       *return_value,
                                                   guint         n_param_values,
                                                   const GValue *param_values,
                                                   gpointer      invocation_hint,
-                                                  gpointer      marshal_data) G_GNUC_INTERNAL;
+                                                  gpointer      marshal_data);
 
 /* FLAGS:BOXED,BOXED (thunar-vfs-marshal.list:2) */
+G_GNUC_INTERNAL
 extern void _thunar_vfs_marshal_FLAGS__BOXED_BOXED (GClosure     *closure,
                                                     GValue       *return_value,
                                                     guint         n_param_values,
                                                     const GValue *param_values,
                                                     gpointer      invocation_hint,
-                                                    gpointer      marshal_data) G_GNUC_INTERNAL;
+                                                    gpointer      marshal_data);
 
 /* FLAGS:STRING,FLAGS (thunar-vfs-marshal.list:3) */
+G_GNUC_INTERNAL
 extern void _thunar_vfs_marshal_FLAGS__STRING_FLAGS (GClosure     *closure,
                                                      GValue       *return_value,
                                                      guint         n_param_values,
                                                      const GValue *param_values,
                                                      gpointer      invocation_hint,
-                                                     gpointer      marshal_data) G_GNUC_INTERNAL;
+                                                     gpointer      marshal_data);
 
 /* VOID:UINT64,UINT,UINT,UINT (thunar-vfs-marshal.list:4) */
+G_GNUC_INTERNAL
 extern void _thunar_vfs_marshal_VOID__UINT64_UINT_UINT_UINT (GClosure     *closure,
                                                              GValue       *return_value,
                                                              guint         n_param_values,
                                                              const GValue *param_values,
                                                              gpointer      invocation_hint,
-                                                             gpointer      marshal_data) G_GNUC_INTERNAL;
+                                                             gpointer      marshal_data);
 
 G_END_DECLS
 
