--- net-snmp/agent/mibgroup/ucd-snmp/proxy.c	Tue Oct 14 22:58:24 2008
+++ net-snmp.mod/agent/mibgroup/ucd-snmp/proxy.c	Tue Oct 14 23:33:00 2008
@@ -4,7 +4,7 @@
  */
 /*
  * Portions of this file are copyrighted by:
- * Copyright @ 2003 Sun Microsystems, Inc. All rights reserved.
+ * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
  * Use is subject to license terms specified in the COPYING file
  * distributed with the Net-SNMP package.
  */
@@ -441,10 +441,52 @@
     case NETSNMP_CALLBACK_OP_RECEIVED_MESSAGE:
         vars = pdu->variables;
 
-        /*
-         * update the original request varbinds with the results 
-         */
-        for (var = vars, request = requests;
+        if (pdu->errstat != SNMP_ERR_NOERROR) {
+	  /*
+	   *  If we receive an error from the proxy agent, pass it on up.
+	   *  The higher-level processing seems to Do The Right Thing.
+	   *
+	   * 2005/06 rks: actually, it doesn't do the right thing for
+	   * a get-next request that returns NOSUCHNAME. If we do nothing,
+	   * it passes that error back to the comman initiator. What it should
+	   * do is ignore the error and move on to the next tree. To
+	   * accomplish that, all we need to do is clear the delegated flag.
+	   * Not sure if any other error codes need the same treatment. Left
+	   * as an exercise to the reader...
+	   */
+	  DEBUGMSGTL(("proxy", "got error response (%d)\n", pdu->errstat));
+	  if((cache->reqinfo->mode == MODE_GETNEXT) &&
+	     (SNMP_ERR_NOSUCHNAME == pdu->errstat)) {
+	    DEBUGMSGTL(("proxy", "  ignoring error response\n"));
+	    netsnmp_handler_mark_requests_as_delegated(requests,
+						       REQUEST_IS_NOT_DELEGATED);
+	  }
+	  else if ((cache->reqinfo->mode == MODE_SET_ACTION)) {
+	    /*
+	     * In order for netsnmp_wrap_up_request to consider the
+	     * SET request complete,
+	     * there must be no delegated requests pending.
+	     * https://sourceforge.net/tracker/
+	     *?func=detail&atid=112694&aid=1554261&group_id=12694
+	     */
+	    DEBUGMSGTL(("proxy",
+			"got SET error %s, index %d\n",
+			snmp_errstring(pdu->errstat), pdu->errindex));
+	    netsnmp_handler_mark_requests_as_delegated(
+						       requests, REQUEST_IS_NOT_DELEGATED);
+
+	    netsnmp_set_request_error(cache->reqinfo, requests, pdu->errstat);
+
+	  }
+	  else {
+	    netsnmp_handler_mark_requests_as_delegated( requests,
+							REQUEST_IS_NOT_DELEGATED);
+	    netsnmp_set_request_error(cache->reqinfo, requests, pdu->errstat);
+	  }
+	  /*
+	   * update the original request varbinds with the results 
+	   */
+	} else  for (var = vars, request = requests;
              request && var;
              request = request->next, var = var->next_variable) {
             snmp_set_var_typed_value(request->requestvb, var->type,
@@ -524,8 +566,7 @@
              */
             if (pdu)
                 snmp_free_pdu(pdu);
-            snmp_log(LOG_ERR,
-                     "response to proxy request illegal.  We're screwed.\n");
+	    DEBUGMSGTL(("proxy", "response to proxy request illegal.  We're screwed.\n"));
             netsnmp_set_request_error(cache->reqinfo, requests,
                                       SNMP_ERR_GENERR);
         }
