--- capseo-0.3.0-158.orig/src/global.cpp	2007-02-23 23:48:28.000000000 -0500
+++ capseo-0.3.0-158/src/global.cpp	2008-04-25 19:34:55.000000000 -0400
@@ -11,13 +11,16 @@
 //  the terms of GPL. See the file COPYING.
 //
 /////////////////////////////////////////////////////////////////////////////
-#include "capseo.h"
-#include "capseo_private.h"
+
+#include <cstdio>
+#include <cstdlib>
+#include <cstring>
+using namespace std;
 
 #include <sys/time.h>
-#include <string.h>
 
-#include <stdio.h>
+#include "capseo.h"
+#include "capseo_private.h"
 
 const int QUICKLZ_TAIL_SIZE = 36000;	//!< quicklz's buffer tail being used for compressing
 
@@ -98,10 +101,10 @@
  *  \sa CapseoFinalize(), CapseoEncodeInit()
  */
 int CapseoInitialize(capseo_t *cs, capseo_info_t *info) {
-	bzero(cs, sizeof(*cs));
+	(void) memset(cs, '\0', sizeof(*cs));
 
 	cs->priv = new capseo_private_t;
-	bzero(cs->priv, sizeof(*cs->priv));
+	(void) memset(cs->priv, '\0', sizeof(*cs->priv));
 
 	info->encoded_video_fmt = CAPSEO_FORMAT_ENCORE_QLZYUV420;
 	info->encoded_cursor_fmt = CAPSEO_FORMAT_ENCORE_QLZARGB;
@@ -142,17 +145,17 @@
  *  frees all memory safely.
  */
 void CapseoFinalize(capseo_t *cs) {
-	bzero(cs->priv->encodedBuffer, cs->priv->encodedBufferLength);
+	(void) memset(cs->priv->encodedBuffer, '\0', cs->priv->encodedBufferLength);
 	delete[] cs->priv->encodedBuffer;
 	cs->priv->encodedBuffer = 0;
 
 	delete[] cs->priv->yuvBuffer;
 	cs->priv->yuvBuffer = 0;
 
-	bzero(cs->priv, sizeof(*cs->priv));
+	(void) memset(cs->priv, '\0', sizeof(*cs->priv));
 	delete cs->priv;
 
-	bzero(cs, sizeof(*cs));
+	(void) memset(cs, '\0', sizeof(*cs));
 }
 
 // vim:ai:noet:ts=4:nowrap
