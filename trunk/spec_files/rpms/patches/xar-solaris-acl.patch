--- xar-1.5.2/lib/stat.c.orig	Sat Feb 12 11:53:28 2011
+++ xar-1.5.2/lib/stat.c	Sat Feb 12 13:16:42 2011
@@ -118,10 +118,46 @@
 	return ret;
 }
 
+#ifdef HAVE_SYS_ACL_H
+#if defined(sun) || defined (_sun)
+static char *
+acl_solaris_errstring(int err) {
+	switch (err) {
+	case EACL_FIELD_NOT_BLANK:
+		return ("Required blank field not blank.");
+
+	case EACL_FLAGS_ERROR:
+		return ("Invalid ACL flag.");
+
+	case EACL_INHERIT_ERROR:
+		return ("Invalid inheritance field.");
+
+	case EACL_INVALID_ACCESS_TYPE:
+		return ("Invalid access type.");
+
+	case EACL_INVALID_STR:
+		return ("Invalid/NULL ACL string.");
+
+	case EACL_INVALID_USER_GROUP:
+		return ("User or Group name not found.");
+
+	case EACL_MISSING_FIELDS:
+		return ("Required fields missing.");
+
+	case EACL_PERM_MASK_ERROR:
+		return ("Invalid permission mask.");
+
+	case EACL_UNKNOWN_DATA:
+		return ("ACL contains unknown data.");
+	}
+	return ("Unknown ACL Error.");
+}
+#endif
+#endif
+
 static int32_t aacls(xar_file_t f, const char *file) {
 #ifdef HAVE_SYS_ACL_H
 #if !defined(__APPLE__)
-	acl_t a;
 	const char *type;
 
 	xar_prop_get(f, "type", &type);
@@ -128,6 +164,23 @@
 	if( !type || (strcmp(type, "symlink") == 0) )
 		return 0;
 
+#if defined(sun) || defined (_sun)
+/* Solaris/OpenSolaris/Illumos ACL support */
+	acl_t *a;
+
+	if (acl_get(file, ACL_NO_TRIVIAL, &a) > -1) {
+		char *t;
+
+		t = acl_totext(a, ACL_COMPACT_FMT | ACL_APPEND_ID | ACL_SID_FMT);
+		if (t) {
+			xar_prop_set(f, "acl/solaris", t);
+			free(t);
+		}
+		acl_free(a);
+	}
+#else /* !sun */
+	acl_t a;
+
 	a = acl_get_file(file, ACL_TYPE_DEFAULT);
 	if( a ) {
 		char *t;
@@ -163,6 +216,7 @@
 		acl_free(a);
 	}
 DONE:
+#endif /* sun */
 #else /* !__AAPLE__ */
 	acl_entry_t e = NULL;
 	acl_t a;
@@ -191,7 +245,6 @@
 #ifdef HAVE_SYS_ACL_H
 #if !defined(__APPLE__)
 	const char *t;
-	acl_t a;
 	const char *type;
 
 	xar_prop_get(f, "type", &type);
@@ -198,7 +251,33 @@
 	if( !type || (strcmp(type, "symlink") == 0) )
 		return 0;
 
+#if defined(sun) || defined (_sun)
+/* Solaris/OpenSolaris/Illumos ACL support */
+	acl_t *a;
+	int err;
 
+	xar_prop_get(f, "acl/solaris", &t);
+	if( t ) {
+		if ((err = acl_fromtext(t, &a)) == 0) {
+			if ((err = acl_set(file, a)) == -1) {
+				xar_err_new(x);
+				xar_err_set_errno(x, errno);
+				xar_err_set_string(x, "Error setting default acl");
+				xar_err_set_file(x, f);
+				xar_err_callback(x, XAR_SEVERITY_NONFATAL, XAR_ERR_ARCHIVE_EXTRACTION);
+			}
+			acl_free(a);
+		} else {
+			xar_err_new(x);
+			xar_err_set_errno(x, errno);
+			xar_err_set_string(x, acl_solaris_errstring(err));
+			xar_err_set_file(x, f);
+			xar_err_callback(x, XAR_SEVERITY_NONFATAL, XAR_ERR_ARCHIVE_EXTRACTION);
+		}
+	}
+#else /* !sun */
+	acl_t a;
+
 	xar_prop_get(f, "acl/default", &t);
 	if( t ) {
 		a = acl_from_text(t);
@@ -239,6 +318,7 @@
 			acl_free(a);
 		}
 	}
+#endif
 #else /* !__APPLE__ */
 	const char *t;
 	acl_t a;
