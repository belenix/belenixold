#!/sbin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T.
# All rights reserved.
#
#
# ident	"@(#)devices-local	1.3	05/06/08 SMI"

# GLXXX - The SysV copyright should be unnecessary now?

# Initiate the device reconfiguration process in case we need some
# device links established so that we can successfully perform our
# remaining standard mounts.

if [ `/sbin/zonename` != "global" ]; then
	exit 0
fi

/usr/bin/svcprop -q -p system/reconfigure system/svc/restarter:default
if [ $? -eq 0 -o -f /.livecd ]; then
	echo "\rConfiguring devices." > /dev/msglog
	/usr/sbin/devfsadm >/dev/msglog 2>&1
        if [ -x /usr/ucb/ucblinks -a -f /usr/ucblib/ucblinks.awk ]; then
                /usr/ucb/ucblinks >/dev/null 2>&1
        fi

	#
	# Flush any existing socket mappings since the major numbers of
	# the device files may have changed.
	#
	/usr/bin/awk '/^[^#]/ { print $1, $2, $3 }' /etc/sock2path | \
		/sbin/soconfig -f /dev/fd/0 >/dev/null 2>&1
	/sbin/soconfig -f /etc/sock2path >/dev/null 2>&1

	#
	# Update kernel driver.conf cache.
	#
	/usr/sbin/devfsadm -I
fi

# Establish the default framebuffer name.

fbdev=`/usr/sbin/prtconf -F 2>/dev/null`

if [ $? -eq 0 ]; then
	set -- /devices$fbdev*
	if [ -c $1 ]; then
		/usr/bin/rm -f /dev/fb
		/usr/bin/ln -s $1 /dev/fb
	fi
fi


if [ ! -f /.livecd ]
then

	# Create any zvol devices
	if [ -x /usr/sbin/zfs ]; then
      	/usr/sbin/zfs volinit || exit $SMF_EXIT_ERR_FATAL
	fi

	exit 0

fi

#
# Mount all disk devices. Our LiveCD cdrom has already been
# mounted under /.cdrom . All other disks/partitions are mounted
# under /mnt
#
cdnum=0
fat=0
dvd=0
solaris=0
swp=""
echo "Mounting local partitions/cdroms" > /dev/msglog
volumeid=`cat /.volumeid`
mntpt=""

for dnode in /dev/dsk/*
do
       type=`/usr/sbin/fstyp $dnode 2> /dev/null`
       if [ "x$type" = "xhsfs" ]
       then
               # Is this our LiveCD cdrom ?
               /usr/lib/fs/hsfs/fstyp -v $dnode 2>&1 | grep "Volume id: $volumeid" > /dev/null
               if [ $? -ne 0 ]
               then
                       /usr/bin/mkdir /mnt/cdrom$cdnum
                       /sbin/mount -F hsfs -o ro $dnode /mnt/cdrom$cdnum
                       cdnum=`/usr/bin/expr $cdnum + 1`
               fi
       else

               if [ "x$type" = "xudfs" ]
               then
                       /usr/bin/mkdir /mnt/dvd$dvd
                       /sbin/mount -F $type -o ro $dnode /mnt/dvd$dvd
                       dvd=`/usr/bin/expr $dvd + 1`

               elif [ "x$type" = "xpcfs" ]
               then
                       /usr/bin/mkdir /mnt/fat$fat
                       /sbin/mount -F $type $dnode /mnt/fat$fat
                       fat=`/usr/bin/expr $fat + 1`

               elif [ "x$type" = "xufs" ]
               then
                       /usr/bin/mkdir /mnt/solaris$solaris
                       /sbin/mount -F $type $dnode /mnt/solaris$solaris
                       if [ $? -eq 0 -a "x$mntpt" = "x" ]; then
		       		mntpt="/mnt/solaris$solaris"
                       fi

                       solaris=`/usr/bin/expr $solaris + 1`

                       if [ -z "$swp" ]
                       then
                           # Try to see whether a physical swap exists
                           slice=`/usr/sbin/prtvtoc -h $dnode | awk '{ if ($2 == "3") { print $1; } }'`
                           if [ "x$slice" != "x" ]
                           then
                               prefix=`echo $dnode |  /usr/bin/sed 's/s[0-9]*$//'`
                               swp="${prefix}s${slice}"
                               /usr/bin/checkcore -f "$swp" -v
                               if [ $? -eq 0 ]
                               then
                                   /usr/sbin/swap -a "$swp"
	                           echo "Using physical swap on hdd ($swp)" > /dev/msglog
                               else
                                   echo "Not using physical swap: $swp, it has a dump" > /dev/msglog
                                   swp=""
                               fi
                           fi
                       fi
               fi
       fi
done

# Turn on I/O tracing if requested and possible
trace=`prtconf -v /devices|sed -n '/trace/{;n;p;}'|cut -f 2 -d\'`
if [ "$trace" = "on" ]; then
        if [ -n "$mntpt" ]; then
                outputfile="${mntpt}/traceout"
                echo "Enabling I/O Tracing ..." > /dev/console
                /opt/DTT/Bin/iosnoop -Deg > "$outputfile" 2> /dev/console &
                # Wait for iosnoop to actually initialize
                sleep 10
        else
                echo "Unable to enable I/O Tracing" > /dev/console
                echo "Must have a mountable Solaris root slice on harddisk" > /d
ev/console
                echo "to hold trace output" > /dev/console
        fi
fi

/usr/sbin/prtconf -pv > /.prtconf

/usr/bin/cat /.prtconf | /usr/bin/fgrep "Memory size" | /usr/bin/cut -d" " -f3 > /.ram

if [ -z "$swp" ]
then
	swp=0
else
	swp=1
fi

#
# Scan for other fses in primary and logical partitions
#
/usr/bin/scanpartitions $swp

#
# Setup OSS if present
#
/usr/bin/osssetup

exit $SMF_EXIT_OK
