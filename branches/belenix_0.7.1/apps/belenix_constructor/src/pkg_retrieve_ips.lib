#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

# Globals: ROOT_DIR: exported by pkg_retrieve_init

# Arg1: Package server
# Arg2: Local proto area
pkg_retrieve_init()
{
	local status

	export ROOT_DIR=$2
	export PYTHONPATH=/usr/lib/python2.4/vendor-packages
	pkg image-create -F -a opensolaris.org=$1 $2
	status=$?
	if [ $status -ne 0 ] ; then
		echo "pkg image-create returned error status ($status)"
		return $status
	fi

	return 0
}

# Arg1: file list of packages
# pkg_retrieve_init() must be called first.
pkg_retrieve()
{

	local PKGS_FILE=$1
	local BASECMD="pkg -R $ROOT_DIR install "
	local status=0

	if [ "$ROOT_DIR" == "" ] ; then
		echo "pkg_retrieve: pkg_retrieve_init must be called first"
		exit 1
	fi

	#
	# Apply packages in two steps.  First install SUNWcs, slim_cd
	# and SUNWcsd to ensure basic infrastructure like /etc/passwd
	# is in place.  Then install the other packages listed in the
	# file provided.
	#
	$BASECMD SUNWcsd || return $?
	$BASECMD slim_cd || return $?
	$BASECMD SUNWcs || return $?
	cat $PKGS_FILE | xargs $BASECMD || return $?

	#
	# After all the packages are installed, manually fix the the
	# configuration information in the image so that further
	# packages can be downloaded from the Open Solaris repository
	#
	cfg_file=$ROOT_DIR/var/pkg/cfg_cache
	tmp_cfg=$TMPDIR/cfg_cache.mod

	# what's original in the file, in the "origin =" field
	old_val=`grep "origin =" $cfg_file|cut -d'=' -f2`
	if [ "$?" != "0" ] ; then
		echo "Unable to find origin= keyword in $cfg_file"
		return "$?"	
	fi

	# The actual Open Solaris package repo
	opensolaris_repo="http://pkg.opensolaris.org:80"

	# the space in front of ${opensolaris_repo} is there intentionally
	# because don't know whether things will work correctly without
	# a space after the equal sign
	sed "s#$old_val# $opensolaris_repo#" < $cfg_file > $tmp_cfg
	cp $tmp_cfg $cfg_file
	/bin/rm -f $tmp_cfg

	return $?
}

# Arg1: file list of packages
# pkg_retrieve_init() must be called first.
pkg_list_verify()
{
	local PKGS_FILE=$1
	local TEMP_STATUS_FILE=/tmp/pkg-status.out
	local another_pkg
	local status
	local rval=0

	if [ "$ROOT_DIR" == "" ] ; then
		echo "pkg_retrieve: pkg_retrieve_init must be called first"
		exit 1
	fi

	echo "Verifying that needed packages are in repository..."

	echo "Fetching list of repository packages..."

	pkg -R $ROOT_DIR status -a >$TEMP_STATUS_FILE
	status=$?
	if [ $status -ne 0 ] ; then
		echo "pkg status returned error status ($status)"
		return $status
	fi

	echo "Checking against list of requested packages..."
	while read -r another_pkg ; do
		/usr/xpg4/bin/grep -q $another_pkg $TEMP_STATUS_FILE
		if [ $? -eq 0 ] ; then
			echo "$another_pkg..."
		else
			echo "$another_pkg is not in the repository!"
			rval=2	# ENOENT
		fi
        done < $PKGS_FILE
	return $rval
}

