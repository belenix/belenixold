diff -uNr libproxy-0.2.3-orig/configure.ac libproxy-0.2.3/configure.ac
--- libproxy-0.2.3-orig/configure.ac	2008-06-06 04:56:16.000000000 +0800
+++ libproxy-0.2.3/configure.ac	2009-02-11 11:11:32.020488000 +0800
@@ -35,6 +35,14 @@
             [build file-based configuration plugin @<:@default=yes@:>@])],
             [], [with_file=yes])
 AM_CONDITIONAL([WITH_FILE], [test x$with_envvar = xyes])
+
+# WPAD fallback
+AC_ARG_WITH([wpad-fallback],
+	    [AS_HELP_STRING([--with-wpad-fallback],
+	    [fall back to WPAD if no other source is available])],
+	    [],
+	    [with_wpad_fallback=yes])
+AM_CONDITIONAL([WITH_WPAD_FALLBACK], [test x$with_wpad_fallback = xyes])
             
 # GNOME
 AC_ARG_WITH([gnome],
@@ -194,6 +202,7 @@
 echo -e "\tPlugins to build..."
 echo -e "\t\tenvvar          : $with_envvar"
 echo -e "\t\tfile            : $with_file"
+echo -e "\t\twpad fallback   : $with_wpad_fallback"
 echo -e "\t\tgnome           : $with_gnome"
 echo -e "\t\tkde             : $with_kde"
 echo -e "\t\twebkit          : $with_webkit"
diff -uNr libproxy-0.2.3-orig/src/lib/proxy_factory.c libproxy-0.2.3/src/lib/proxy_factory.c
--- libproxy-0.2.3-orig/src/lib/proxy_factory.c	2008-06-06 04:56:15.000000000 +0800
+++ libproxy-0.2.3/src/lib/proxy_factory.c	2009-02-11 11:22:30.732785000 +0800
@@ -35,7 +35,7 @@
 #include "wpad.h"
 #include "config_file.h"
 
-#define DEFAULT_CONFIG_ORDER "USER,SESSION,SYSTEM"
+#define DEFAULT_CONFIG_ORDER "USER,SESSION,SYSTEM,envvar"
 
 struct _pxProxyFactoryConfig {
 	pxConfigCategory           category;
@@ -577,42 +577,30 @@
 	}
 	px_strfreev(orderv);
 	
-	// No config was found via search order, call all plugins
-	for (int i=0 ; self->configs && self->configs[i] && !config ; i++)
-		config = self->configs[i]->callback(self);
-	
-	// No plugin returned a valid config, fall back to 'wpad://'
+	// No plugin returned a valid config, so return 'direct://'
 	if (!config)
-	{
-		fprintf(stderr, "*** Unable to locate valid config! Falling back to auto-detection...\n");
-		config         = px_malloc0(sizeof(pxConfig));
-		config->url    = px_strdup("wpad://");
-		config->ignore = px_strdup("");
-	}
+		goto do_return;
 	
-	// If the config plugin returned an invalid config type or malformed URL, fall back to 'wpad://'
+	// If the config plugin returned an invalid config type or malformed URL, fail
 	if (!(!strncmp(config->url, "http://", 7) || 
 		  !strncmp(config->url, "socks://", 8) ||
 		  !strncmp(config->url, "pac+", 4) ||
 		  !strcmp (config->url, "wpad://") ||
 		  !strcmp (config->url, "direct://")))
 	{
-		fprintf(stderr, "*** Config plugin returned invalid URL type! Falling back to auto-detection...\n");
-		px_free(config->url);
-		config->url = px_strdup("wpad://");
+		fprintf(stderr, "*** Config plugin returned invalid URL type!\n");
+		goto do_return;
 	}
 	else if (!strncmp(config->url, "pac+", 4) && !px_url_is_valid(config->url + 4))
 	{
-		fprintf(stderr, "*** Config plugin returned malformed URL! Falling back to auto-detection...\n");
-		px_free(config->url);
-		config->url = px_strdup("wpad://");
+		fprintf(stderr, "*** Config plugin returned malformed URL!\n");
+		goto do_return;
 	}
 	else if ((!strncmp(config->url, "http://", 7) || !strncmp(config->url, "socks://", 8)) && 
 			  !px_url_is_valid(config->url))
 	{
-		fprintf(stderr, "*** Config plugin returned malformed URL! Falling back to auto-detection...\n");
-		px_free(config->url);
-		config->url = px_strdup("wpad://");
+		fprintf(stderr, "*** Config plugin returned malformed URL!\n");
+		goto do_return;
 	}
 	
 	// Check our ignore patterns
diff -uNr libproxy-0.2.3-orig/src/plugins/Makefile.am libproxy-0.2.3/src/plugins/Makefile.am
--- libproxy-0.2.3-orig/src/plugins/Makefile.am	2008-06-06 04:56:14.000000000 +0800
+++ libproxy-0.2.3/src/plugins/Makefile.am	2009-02-11 11:29:28.635711000 +0800
@@ -8,6 +8,9 @@
 if WITH_FILE
 plugin_LTLIBRARIES += file.la
 endif
+if WITH_WPAD_FALLBACK
+plugin_LTLIBRARIES += wpad-fallback.la
+endif
 if WITH_GNOME
 plugin_LTLIBRARIES += gnome.la
 endif
@@ -36,6 +39,12 @@
 file_la_LIBADD            = ../lib/libproxy.la
 file_la_LDFLAGS           = -module -avoid-version
 
+# WPAD Fallback Plugin
+wpad_fallback_la_SOURCES  = wpad-fallback.c
+wpad_fallback_la_CFLAGS   = -I$(top_srcdir)/src/lib
+wpad_fallback_la_LIBADD   = ../lib/libproxy.la
+wpad_fallback_la_LDFLAGS  = -module -avoid-version
+
 # GConf/GNOME Config Plugin
 gnome_la_SOURCES          = gnome.c xhasclient.c
 gnome_la_CFLAGS           = -I$(top_srcdir)/src/lib @GNOME_CFLAGS@
diff -uNr libproxy-0.2.3-orig/src/plugins/wpad-fallback.c libproxy-0.2.3/src/plugins/wpad-fallback.c
--- libproxy-0.2.3-orig/src/plugins/wpad-fallback.c	1970-01-01 08:00:00.000000000 +0800
+++ libproxy-0.2.3/src/plugins/wpad-fallback.c	2009-02-11 11:32:17.086745000 +0800
@@ -0,0 +1,37 @@
+/*******************************************************************************
+ * libproxy - A library for proxy configuration
+ * Copyright (C) 2006 Nathaniel McCallum <nathaniel@natemccallum.com>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
+ ******************************************************************************/
+
+#include <misc.h>
+#include <proxy_factory.h>
+
+pxConfig *get_config_cb(pxProxyFactory *self, pxURL *url)
+{
+	return px_config_create(px_strdup("wpad://"), px_strdup(""));
+}
+
+bool on_proxy_factory_instantiate(pxProxyFactory *self)
+{
+	return px_proxy_factory_config_add(self, "wpad-fallback", PX_CONFIG_CATEGORY_NONE, get_config_cb);
+}
+
+void on_proxy_factory_destantiate(pxProxyFactory *self)
+{
+	px_proxy_factory_config_del(self, "wpad-fallback");
+}
+
