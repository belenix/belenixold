--- usr/src/cmd/ramdiskadm/main.c.orig	Thu Jan  8 09:06:39 2009
+++ usr/src/cmd/ramdiskadm/main.c	Thu Jan  8 09:06:39 2009
@@ -106,6 +106,17 @@
 	(void) printf(RD_BLOCK_DEV_PFX "%s\n", name);
 }
 
+static void
+rescan_ramdisk(int ctl_fd, char *name)
+{
+	struct rd_ioctl ri;
+
+	(void) strlcpy(ri.ri_name, name, sizeof (ri.ri_name));
+	if (ioctl(ctl_fd, RD_RESCAN, &ri) != 0) {
+		die(gettext("couldn't rescan ramdisk \"%s\""), name);
+	}
+}
+
 /*
  * Delete a named ramdisk.
  */
@@ -214,6 +225,7 @@
 	char		*name = NULL;
 	int		allocflag = 0;
 	int		deleteflag = 0;
+	int		rescanflag = 0;
 	int		errflag = 0;
 	char		*suffix;
 	uint64_t	size;
@@ -226,7 +238,7 @@
 	(void) setlocale(LC_ALL, "");
 	(void) textdomain(TEXT_DOMAIN);
 
-	while ((c = getopt(argc, argv, "a:d:")) != EOF) {
+	while ((c = getopt(argc, argv, "a:d:s:")) != EOF) {
 		switch (c) {
 		case 'a':
 			allocflag = 1;
@@ -263,6 +275,10 @@
 			deleteflag = 1;
 			name = optarg;
 			break;
+		case 's':
+			rescanflag = 1;
+			name = optarg;
+			break;
 		default:
 			errflag = 1;
 			break;
@@ -313,11 +329,15 @@
 	 * Now do the real work.
 	 */
 	openflag = O_EXCL;
-	if (allocflag || deleteflag)
+	if (allocflag || deleteflag || rescanflag)
 		openflag |= O_RDWR;
 	else
 		openflag |= O_RDONLY;
-	ctl_fd = open(rd_ctl, openflag);
+
+	if (rescanflag)
+		ctl_fd = open(name, openflag);
+	else
+		ctl_fd = open(rd_ctl, openflag);
 	if (ctl_fd == -1) {
 		if ((errno == EPERM) || (errno == EACCES)) {
 			die(gettext("you do not have permission to perform "
@@ -332,6 +352,8 @@
 		alloc_ramdisk(ctl_fd, name, size);
 	} else if (deleteflag) {
 		delete_ramdisk(ctl_fd, name);
+	} else if (rescanflag) {
+		rescan_ramdisk(ctl_fd, name);
 	} else {
 		print_ramdisk();
 	}
